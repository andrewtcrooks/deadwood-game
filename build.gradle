// Groovy DSL
plugins {
    id 'java'
    id 'application' 
}

// Project metadata
group = 'com.example'
version = '1.0-SNAPSHOT'

// Java version compatibility
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// Repository configuration
repositories {
    mavenCentral()
}

// Dependencies
dependencies {
    // JUnit test framework dependencies
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    
    // Include all JAR files from the 'lib' directory and its subdirectories
    implementation fileTree(dir: 'lib', include: ['**/*.jar'])

    // // JavaFX dependencies (pulls from Maven repo, use direct file above)# settings.json
    // implementation 'org.openjfx:javafx-controls:20.0.2'
    // implementation 'org.openjfx:javafx-fxml:20.0.2'
}

// Application configuration
application {
    mainClass = 'Deadwood'
    
    // VM options to include JavaFX modules
    applicationDefaultJvmArgs = [
        '--module-path', 'lib/javafx-sdk-17.0.12/lib',
        '--add-modules', 'javafx.controls,javafx.fxml'
    ]
}

// Test configuration
test {
    useJUnitPlatform()
    
}

// Task to run the application
tasks.named('run', JavaExec) {
    standardInput = System.in
}

// Task to generate classpath
task generateClasspath {
    doLast {
        def classpathFile = file('.classpath')
        classpathFile.text = ''
        configurations.compileClasspath.each { File file ->
            classpathFile << file.absolutePath + '\n'
        }
    }
}

// Ensure generateClasspath runs as part of the build process
build.dependsOn generateClasspath
